type Role {
  id: ID! @id
  name: String! @unique
  claims: [Claim] @relation(name: "RoleClaims")
}

type Claim {
  id: ID! @id
  name: String! @unique
  description: String
}

type User {
  id: ID! @id @unique
  identifier: String! @unique
  identificationType: IdentificationType!
  # password: String
  name: String
  city: City @relation(name: "Hometown")
  roles: [Role]
  registered: DateTime
  # wallet: Wallet!
}

enum IdentificationType {
  LOGIN
  SOCIAL
}

type City {
  id: ID! @id
  name: String! @unique
  available: Boolean!
  wallet: Wallet!
}

type Offer {
  id: ID! @id
  name: String!
  image: String!
  description: String

  availabilityStarts: String
  businessFunction: String
  price: Float
  priceCurrency: String
  category: String

  count: Int
}
type Asset {
  id: ID! @id
  name: String! @unique
}
type TransactionType {
  id: ID! @id
  name: String! @unique
}

type Balance {
  id: ID! @id
  value: Int!
  asset: Asset!
}

type Wallet {
  id: ID! @id
  balances: [Balance!]!
}

type Transaction {
  id: ID! @id
  input: Wallet! @relation(name: "Input")
  output: Wallet! @relation(name: "Output")
  operation: TransactionType! @relation(name: "Operation")
  asset: Asset! @relation(name: "Asset")
  amount: Int!
}

enum InvitationType {
  EMAIL
  PERSONALLINK
  GLOBALLINK
}

type Invitation {
  id: ID! @id
  type: InvitationType!
  invitedBy: User! @relation(name: "Inviter")
  email: String
  name: String
  city: City
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  invited: [User] @relation(name: "Invited")
  state: InvitationState!
}

enum InvitationState {
  Invited
  TemporaryAccount
  Finished
}

type EmailTemplate {
  id: ID! @id
  name: String! @unique
  from: String!
  subject: String!
  text: String
  html: String
}

type EmailLogin {
  id: ID! @id
  user: User!
}
