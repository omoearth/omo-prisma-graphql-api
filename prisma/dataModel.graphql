type Role {
  id: ID! @id
  name: String! @unique
  claims: [Claim] @relation(name: "RoleClaims")
}

type Claim {
  id: ID! @id
  name: String! @unique
  description: String
}

type User {
  id: ID! @id @unique
  email: String! @unique
  password: String
  name: String
  city: City @relation(name: "Hometown")
  roles: [Role]
}

type City {
  id: ID! @id
  name: String! @unique
  available: Boolean!
  votes: Int
}

interface Thing {
  id: ID! @id
  name: String!
  image: String
  description: String
}

type Offer implements Thing {
  id: ID! @id
  name: String!
  image: String!
  description: String

  availabilityStarts: String
  businessFunction: String
  price: Float
  priceCurrency: String

  count: Int
}

type Service implements Thing {
  id: ID! @id
  name: String!
  image: String
  description: String

  serviceType: String!
  offers: [Offer!]
  termsOfService: String
}
