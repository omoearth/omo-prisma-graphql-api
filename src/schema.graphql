# import User from './generated/prisma.graphql'

type Query {
  currentUser: User!
  cities: [City!]!
  offers(category: String!): [Offer]
  users: [User!]!
}

type Mutation {
  signInOrSignUp(email: String!): Response!
  loginWithMail(emailLoginId: String): LoginResponse!
}

type Subscription {
  city: City
  offer: Offer
}
type Response {
  success: Boolean
  message: String
}

type LoginResponse {
  success: Boolean
  message: String
  user: User
  token: String
}

type City implements Node {
  id: ID!
  name: String!
  available: Boolean!
  wallet: Wallet!
  votes: Int
}

type User implements Node {
  id: ID!
  identifier: String!
  identificationType: IdentificationType!
  password: String
  name: String
  city: City
  roles(
    where: RoleWhereInput
    orderBy: RoleOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Role!]
  wallet: Wallet!
  claims: [String]
}
